plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.dianatuman.practicum'
    version = '0.0.1-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        all {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-fabric8:3.3.0'
        implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-fabric8-config:3.3.0'
        implementation("org.springframework.boot:spring-boot-starter-actuator") {
            exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
        }

        // Log4j2
        implementation 'org.slf4j:slf4j-api:2.0.17'
        implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.25.1'
        implementation'org.apache.kafka:kafka-clients:4.0.0'

        // Metrics
        implementation 'io.micrometer:micrometer-registry-prometheus:1.16.0-M2'
        implementation 'io.micrometer:micrometer-tracing-bridge-brave:1.6.0-M2'
        implementation 'io.zipkin.reporter2:zipkin-reporter-brave:3.5.1'
        implementation 'io.zipkin.brave:brave-instrumentation-spring-web:5.13.8'

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // Test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.boot:spring-boot-testcontainers'
        testImplementation 'org.testcontainers:junit-jupiter'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

tasks.register('buildAll') {
    subprojects.forEach {
        buildAll.dependsOn it.tasks.getByName('build')
    }
}