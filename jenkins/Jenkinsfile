pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = credentials('DOCKER_REGISTRY')
        DB_PASSWORD     = credentials('DB_PASSWORD')
        GITHUB_USERNAME = credentials('GITHUB_USERNAME')
        DB_NAME         = 'mydb'
        DB_USER         = 'myuser'
        IMAGE_TAG       = "${env.BUILD_NUMBER}"
    }

     stages {
            stage('Gradle Build') {
                steps {
                    sh 'chmod +x ./gradlew'
                    sh './gradlew clean buildAll'
                }
            }

            stage('Build Docker Images') {
                sh """
                    docker build -t ${DOCKER_REGISTRY}/bank-ui:${IMAGE_TAG} bank-ui
                    docker build -t ${DOCKER_REGISTRY}/accounts-service:${IMAGE_TAG} accounts
                    docker build -t ${DOCKER_REGISTRY}/blocker-service:${IMAGE_TAG} blocker
                    docker build -t ${DOCKER_REGISTRY}/cash-service:${IMAGE_TAG} cash
                    docker build -t ${DOCKER_REGISTRY}/exchange-service:${IMAGE_TAG} exchange
                    docker build -t ${DOCKER_REGISTRY}/exchange-generator-service:${IMAGE_TAG} exchange-generator
                    docker build -t ${DOCKER_REGISTRY}/gateway-api:${IMAGE_TAG} gateway-api
                    docker build -t ${DOCKER_REGISTRY}/notifications-service:${IMAGE_TAG} notifications
                    docker build -t ${DOCKER_REGISTRY}/transfer-service:${IMAGE_TAG} transfer
                    """
                }
            }

            stage('Push Docker Images') {
                steps {
                    withCredentials([string(credentialsId: 'GHCR_TOKEN', variable: 'GHCR_TOKEN')]) {
                        sh """
                        echo \$GHCR_TOKEN | docker login ghcr.io -u ${GITHUB_USERNAME} --password-stdin
                        docker push ${DOCKER_REGISTRY}/bank-ui:${IMAGE_TAG}
                        docker push ${DOCKER_REGISTRY}/accounts-service:${IMAGE_TAG}
                        docker push ${DOCKER_REGISTRY}/blocker-service:${IMAGE_TAG}
                        docker push ${DOCKER_REGISTRY}/cash-service:${IMAGE_TAG}
                        docker push ${DOCKER_REGISTRY}/exchange-service:${IMAGE_TAG}
                        docker push ${DOCKER_REGISTRY}/exchange-generator-service:${IMAGE_TAG}
                        docker push ${DOCKER_REGISTRY}/gateway-api:${IMAGE_TAG}
                        docker push ${DOCKER_REGISTRY}/notifications-service:${IMAGE_TAG}
                        docker push ${DOCKER_REGISTRY}/transfer-service:${IMAGE_TAG}
                        """
                    }
                }
            }

            stage('Add Helm Repo') {
                steps {
                    sh """
                    helm repo add bitnami https://charts.bitnami.com/bitnami
                    helm repo update
                    """
                }
            }

            stage('Helm Deploy') {
                steps {
                    chmod +x deploy_with_helm.sh
                    sh './deploy_with_helm.sh'
                }
            }
        }

        post {
            failure {
                echo 'Pipeline failed!'
            }
            success {
                echo 'Pipeline completed successfully!'
            }
        }
}