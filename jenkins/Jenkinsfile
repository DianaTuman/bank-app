pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = credentials('DOCKER_REGISTRY')
        GITHUB_USERNAME = credentials('GITHUB_USERNAME')
        IMAGE_TAG       = "${env.BUILD_NUMBER}"
    }

     stages {
            stage('Gradle Build') {
                steps {
                    sh 'chmod +x ./gradlew'
                    sh './gradlew clean buildAll'
                }
            }

            stage('Build Images') {
                steps {
                    sh '''
                    chmod +x ./build_images.sh
                    ./build_images.sh
                    '''
                }
            }

            stage('Add Helm Repo') {
                steps {
                    sh """
                    helm repo add bitnami https://charts.bitnami.com/bitnami
                    helm repo update
                    """
                }
            }

            stage('Helm Deploy') {
                steps {
                    sh '''
                    echo "Deleting Helm chart if it was installed before"
                    helm delete bank-app

                    echo "Building Helm dependencies..."
                    helm dependency build ./bank-app

                    kubectl config view
                    echo "Installing Helm chart: bank-app..."
                    helm install bank-app ./bank-app
                    '''
                }
            }

            stage('Wait for bank-ui Pod to be Ready') {
                steps {
                    sh '''#!/bin/bash
                    set -e

                    echo "Looking for a pod with name containing 'bank-ui'..."
                    BANK_UI_POD=$(kubectl get pods --no-headers -o custom-columns=":metadata.name" | grep bank-ui | head -n 1)

                    if [ -z "$BANK_UI_POD" ]; then
                      echo "No pod found with name containing 'bank-ui'"
                      exit 1
                    fi

                    echo "Found pod: $BANK_UI_POD"
                    echo "Waiting for pod $BANK_UI_POD to be Ready..."

                    for ((i=1; i<=30; i++)); do
                      READY=$(kubectl get pod "$BANK_UI_POD" -o jsonpath="{.status.conditions[?(@.type=='Ready')].status}")
                      if [ "$READY" == "True" ]; then
                        echo "Pod $BANK_UI_POD is Ready."
                        break
                      fi
                      echo "Pod not ready yet... ($i/30)"
                      sleep 10
                    done

                    if [ "$READY" != "True" ]; then
                      echo "Pod $BANK_UI_POD did not become Ready in time."
                      exit 1
                    fi
                    '''
                }
            }

            stage('Port Forward and Open App') {
                steps {
                    sh '''#!/bin/bash
                    set -e

                    echo "Forwarding port from pod to localhost:8088..."
                    kubectl port-forward pod/"$BANK_UI_POD" 8088:8080 > port-forward.log 2>&1 &
                    PORT_FORWARD_PID=$!

                    echo "Waiting a few seconds for port-forward to initialize..."
                    sleep 300

                    echo "Opening app in browser at http://localhost:8088..."
                    if command -v xdg-open > /dev/null; then
                        xdg-open http://localhost:8088
                    elif command -v open > /dev/null; then
                        open http://localhost:8088
                    else
                        echo "Please open manually: http://localhost:8088"
                    fi

                    echo "Port-forward running in background (PID: $PORT_FORWARD_PID)"
                    echo "Press Ctrl+C or terminate the build to stop it."

                    wait $PORT_FORWARD_PID
                    '''
                }
            }
        }

        post {
            failure {
                echo 'Pipeline failed!'
            }
            success {
                echo 'Pipeline completed successfully!'
            }
        }
}